{"version":3,"sources":["kanyeQuotes.js","Quote.js","Buttons.js","Result.js","App.js","urls.js","serviceWorker.js","index.js"],"names":["quotes","Quote","props","className","quote","Buttons","hideResultDiv","showDiv","src","alt","onClick","Result","result","answer","userChoice","gifUrl","App","state","randomQuote","trumpGifsArray","kanyeGifsArray","eraseDelay","startGame","setState","Math","random","getTrumpQuote","kanyeQuotes","floor","handleClick","e","updateStateObject","target","randomNum","images","downsized","url","setTimeout","this","getGiphys","axios","get","trumpGif","kanyeGif","data","trumpQuote","value","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd195797.chunk.js","sourcesContent":["const quotes = [\n  \"2024\",\n  \"All you have to be is yourself\",\n  \"Believe in your flyness...conquer your shyness.\",\n  \"Burn that excel spread sheet\",\n  \"Decentralize\",\n  \"Distraction is the enemy of vision\",\n  \"Everything you do in life stems from either fear or love\",\n  \"For me giving up is way harder than trying.\",\n  \"For me, money is not my definition of success. Inspiring people is a definition of success\",\n  \"Fur pillows are hard to actually sleep on\",\n  \"George Bush doesn't care about black people\",\n  \"Have you ever thought you were in love with someone but then realized you were just staring in a mirror for 20 minutes?\",\n  \"I care. I care about everything. Sometimes not giving a f#%k is caring the most.\",\n  \"I feel calm but energized\",\n  \"I feel like I'm too busy writing history to read it.\",\n  \"I feel like me and Taylor might still have sex\",\n  \"I give up drinking every week\",\n  \"I leave my emojis bart Simpson color\",\n  \"I love sleep; it's my favorite.\",\n  \"I make awesome decisions in bike stores!!!\",\n  \"I really love my Tesla. I'm in the future. Thank you Elon.\",\n  \"I still think I am the greatest.\",\n  \"I think I do myself a disservice by comparing myself to Steve Jobs and Walt Disney and human beings that we've seen before. It should be more like Willy Wonka...and welcome to my chocolate factory.\",\n  \"I want the world to be better! All I want is positive! All I want is dopeness!\",\n  \"I wish I had a friend like me\",\n  \"I'd like to meet with Tim Cook. I got some ideas\",\n  \"I'll say things that are serious and put them in a joke form so people can enjoy them. We laugh to keep from crying.\",\n  \"I'm a creative genius\",\n  \"I'm nice at ping pong\",\n  \"I'm the best\",\n  \"If I don't scream, if I don't say something then no one's going to say anything.\",\n  \"If I got any cooler I would freeze to death\",\n  \"Just stop lying about shit. Just stop lying.\",\n  \"Keep squares out yo circle\",\n  \"Keep your nose out the sky, keep your heart to god, and keep your face to the rising sun.\",\n  \"Let's be like water\",\n  \"Man... whatever happened to my antique fish tank?\",\n  \"My dad got me a drone for Christmas\",\n  \"My greatest award is what I'm about to do.\",\n  \"My greatest pain in life is that I will never be able to see myself perform live.\",\n  \"One day I'm gon' marry a porn star\",\n  \"One of my favorite of many things about what the Trump hat represents to me is that people can't tell me what to do because I'm black\",\n  \"Only free thinkers\",\n  \"People always say that you can't please everybody. I think that's a cop-out. Why not attempt it? Cause think of all the people that you will please if you try.\",\n  \"People always tell you 'Be humble. Be humble.' When was the last time someone told you to be amazing? Be great! Be awesome! Be awesome!\",\n  \"People only get jealous when they care.\",\n  \"Perhaps I should have been more like water today\",\n  \"Pulling up in the may bike\",\n  \"Shut the fuck up I will fucking laser you with alien fucking eyes and explode your fucking head\",\n  \"Sometimes I push the door close button on people running towards the elevator. I just need my own elevator sometimes. My sanctuary.\",\n  \"Sometimes you have to get rid of everything\",\n  \"Style is genderless\",\n  \"The thought police want to suppress freedom of thought\",\n  \"The world is our family\",\n  \"The world is our office\",\n  \"Today is the best day ever and tomorrow's going to be even better\",\n  \"Truth is my goal. Controversy is my gym. I'll do a hundred reps of controversy for a 6 pack of truth\",\n  \"Tweeting is legal and also therapeutic\",\n  \"We all self-conscious. I'm just the first to admit it.\",\n  \"We came into a broken world. And we're the cleanup crew.\",\n  \"You can't look at a glass half full or empty if it's overflowing.\",\n  \"I hate when I'm on a flight and I wake up with a water bottle next to me like oh great now I gotta be responsible for this water bottle\",\n]\n\nexport default quotes","import React from 'react';\n\nconst Quote = props => (\n  <div className='quoteDiv'>\n    <h3>\n      {props.quote}\n    </h3>\n  </div >\n)\n\nexport default Quote","import React from 'react';\n\nconst Buttons = props => {\n  let hideResultDiv = !props.showDiv ? \"resultDiv\" : \"hideResultDiv\"\n\n  return (\n    <div className={hideResultDiv}>\n      <img src=\"trump.png\" alt=\"trump\" onClick={props.onClick} className='button' />\n      <img src=\"ye.png\" alt=\"kanye\" onClick={props.onClick} />\n    </div>\n  )\n}\n\nexport default Buttons","import React from 'react';\n\nconst Result = props => {\n  let result = props.answer === props.userChoice ?\n    <h1>{props.answer} wins!</h1> :\n    <h1>You lose, it was {props.answer}</h1>\n\n  let hideResultDiv = props.showDiv ? \"resultDiv\" : \"hideResultDiv\"\n\n  return (\n    <div className={hideResultDiv}>\n      {result}\n      <img src={props.gifUrl} alt=\"\" />\n    </div>\n  )\n}\n\nexport default Result","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport kanyeQuotes from './kanyeQuotes';\nimport Quote from './Quote';\nimport Buttons from './Buttons';\nimport Result from './Result';\nimport { trumpGiphyUrl, kanyeGiphyUrl, trumpQuoteUrl } from './urls'\n\nexport default class App extends React.Component {\n  state = {\n    randomQuote: '',\n    answer: null,\n    userChoice: '',\n    showDiv: false,\n    trumpGifsArray: [],\n    kanyeGifsArray: [],\n    gifUrl: '',\n    eraseDelay: 4000\n  }\n\n  componentDidMount() {\n    this.getGiphys()\n    this.startGame()\n  }\n\n  startGame = () => {\n    this.setState({\n      showDiv: false,\n      gifUrl: '',\n      randomQuote: ''\n    })\n\n    Math.random() <= 0.5 ?\n      this.getTrumpQuote() :\n      this.setState({\n        randomQuote: kanyeQuotes[Math.floor(Math.random() * 63)],\n        answer: 'kanye'\n      })\n  }\n\n  async getGiphys() {\n    let trumpGif = await axios.get(trumpGiphyUrl)\n    let kanyeGif = await axios.get(kanyeGiphyUrl)\n\n    this.setState({\n      trumpGifsArray: trumpGif.data.data,\n      kanyeGifsArray: kanyeGif.data.data\n    })\n  }\n\n  handleClick = (e) => {\n    let updateStateObject = {\n      userChoice: e.target.alt,\n      showDiv: true,\n      randomQuote: ''\n    }\n    let randomNum = Math.floor(Math.random() * 25)\n\n    updateStateObject.gifUrl = (e.target.alt === 'trump') ?\n      this.state.trumpGifsArray[randomNum].images.downsized.url :\n      this.state.kanyeGifsArray[randomNum].images.downsized.url\n\n    this.setState(updateStateObject)\n\n    setTimeout(this.startGame, 3000)\n  }\n\n  async getTrumpQuote() {\n    let trumpQuote = await axios.get(trumpQuoteUrl)\n\n    this.setState({\n      randomQuote: trumpQuote.data.value,\n      answer: 'trump'\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Quote quote={this.state.randomQuote} />\n        <Buttons\n          onClick={(e) => this.handleClick(e)}\n          showDiv={this.state.showDiv}\n        />\n        <Result\n          answer={this.state.answer}\n          userChoice={this.state.userChoice}\n          showDiv={this.state.showDiv}\n          gifUrl={this.state.gifUrl}\n        />\n      </div>\n    );\n  }\n}\n","export const trumpGiphyUrl = `https://api.giphy.com/v1/gifs/search?api_key=2041494ca782403cb6055682a7943c75&q=trump&limit=25&offset=0&rating=G&lang=en`\n\nexport const kanyeGiphyUrl = `https://api.giphy.com/v1/gifs/search?api_key=2041494ca782403cb6055682a7943c75&q=kanye&limit=25&offset=0&rating=G&lang=en`\n\nexport const trumpQuoteUrl = 'https://cors-anywhere.herokuapp.com/https://api.tronalddump.io/random/quote'\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}